name: Continuous Integration

# When pull requests are made on the main branch
on:
  pull_request:
    branches:
      - main
      - qa
      - stage
      - master

env:
  WORKSPACE_ID: ${{ secrets.WORKSPACE_ID }}
  MASTER_AUTH_PROFILE_ID: ${{ secrets.MASTER_AUTH_PROFILE_ID }}
  TEST_ACCOUNTS_PASSWORD: ${{ secrets.TEST_ACCOUNTS_PASSWORD }}
  CI: true

jobs:
  CI:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build, and test
        run: |
          npm install
          npm run eslint
          npm run build --if-present
          npm run test
        env:
          CI: true
      - name: Install 8base-cli
        run: sudo npm i -g 8base-cli@0.0.108
      - name: Login into 8base
        run: sudo 8base login -t ${{ secrets.MASTER_API_TOKEN }}
        # If branch name is master, configure 8base as normal
      - name: Configure 8base into Master
        run: sudo 8base configure --workspaceId ${{ secrets.WORKSPACE_ID }}
        if: ${{ github.base_ref == 'master' }}
        # If not, create the config file manually with the specified branch
      - name: Create .workspace.json file
        if: ${{ github.base_ref != 'master' }}
        uses: finnp/create-file-action@master
        env:
          FILE_NAME: .workspace.json
          FILE_DATA: |
            {
              "apiHost": "https://api.8base.com",
              "workspaceId": "${{ secrets.WORKSPACE_ID }}",
              "environmentName": "${{ github.base_ref }}"
            }
      - name: Create test environment for PR
        id: branch
        run: sudo 8base environment branch -n test_pr_${{ github.event.number }}
      - name: Commit PR migrations
        run: |
          sudo rm -f package-lock.json
          sudo 8base migration commit --force -m FULL
      - name: Test
        run: npm run test
        env:
          WORKSPACE_ENVIRONMENT: test_pr_${{ github.event.number }}
      - name: Delete created environment
        run: sudo 8base environment delete -n test_pr_${{ github.event.number }}
        if: ${{ always() }}
